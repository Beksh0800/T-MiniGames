# #!/usr/bin/env python3
# """
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–≥—Ä —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# "    # –ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π
#     dice_data = {"dice_count": 2}
#     respons    # –•–æ–¥—ã –∏–≥—Ä–æ–∫–æ–≤
#     choice1_data = {"choice": "rock"}
#     response = requests.post(f"{BASE_URL}/api/rps/play/{room_id}?telegram_id={telegram_id1}", json=choice1_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ 1: {response.text}")
#         return False
    
#     choice2_data = {"choice": "scissors"}
#     response = requests.post(f"{BASE_URL}/api/rps/play/{room_id}?telegram_id={telegram_id2}", json=choice2_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ 2: {response.text}")
#         return False
    
#     result = response.json()
#     print(f"‚úÇÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç RPS: {result['message']}")st(f"{BASE_URL}/api/dice/play/{room_id}?telegram_id={telegram_id1}", json=dice_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ—Å–∫–∞ –∫–æ—Å—Ç–µ–π: {response.text}")
#         return False
    
#     roll_result = response.json()
#     print(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –∏–≥—Ä–æ–∫–∞ 1: {roll_result['results']}, –°—É–º–º–∞: {roll_result['total']}")
    
#     # –ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
#     response = requests.post(f"{BASE_URL}/api/dice/play/{room_id}?telegram_id={telegram_id2}", json=dice_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ—Å–∫–∞ –∫–æ—Å—Ç–µ–π –∏–≥—Ä–æ–∫–∞ 2: {response.text}")
#         return False
    
#     roll_result2 = response.json()
#     print(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –∏–≥—Ä–æ–∫–∞ 2: {roll_result2['results']}, –°—É–º–º–∞: {roll_result2['total']}")s
# import json
# import time

# # –ë–∞–∑–æ–≤—ã–π URL API
# BASE_URL = "http://localhost:8000"

# def test_user_creation():
#     """–¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
#     print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
#     user_data = {
#         "telegram_id": 123456789,
#         "username": "test_player",
#         "first_name": "Test",
#         "last_name": "Player"
#     }
    
#     response = requests.post(f"{BASE_URL}/api/users", json=user_data)
#     if response.status_code == 200:
#         user = response.json()
#         print(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user_data['username']} (ID: {user['user_id']})")
#         return {"id": user['user_id'], "username": user_data['username'], "telegram_id": user_data['telegram_id']}
#     else:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
#         return None

# def test_add_stars(telegram_id):
#     """–¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–≤–µ–∑–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
#     print(f"üí∞ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–≤–µ–∑–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {telegram_id}...")
    
#     response = requests.post(f"{BASE_URL}/api/users/{telegram_id}/add-stars?amount=100")
#     if response.status_code == 200:
#         result = response.json()
#         print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ 100 –∑–≤–µ–∑–¥. –ù–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {result['new_balance']}")
#         return True
#     else:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–≤–µ–∑–¥: {response.text}")
#         return False

# def test_dice_game(telegram_id1, telegram_id2):
#     """–¢–µ—Å—Ç –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏"""
#     print("üé≤ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏...")
    
#     # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
#     response = requests.post(f"{BASE_URL}/api/games/create-room?game_type=dice&bet_amount=10&max_players=2&telegram_id={telegram_id1}")
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã: {response.text}")
#         return False
    
#     room = response.json()
#     room_id = room["room_id"]
#     print(f"‚úÖ –ö–æ–º–Ω–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞: {room_id}")
    
#     # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
#     response = requests.post(f"{BASE_URL}/api/games/join-room/{room_id}?telegram_id={telegram_id2}")
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ: {response.text}")
#         return False
    
#     print("‚úÖ –í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è")
    
#     # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
#     response = requests.post(f"{BASE_URL}/api/games/start-game/{room_id}?telegram_id={telegram_id1}")
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã: {response.text}")
#         return False
    
#     print("‚úÖ –ò–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞")
    
#     # –ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π
#     dice_data = {"dice_count": 2}
#     response = requests.post(f"{BASE_URL}/api/dice/{room_id}/roll?telegram_id={telegram_id1}", json=dice_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ—Å–∫–∞ –∫–æ—Å—Ç–µ–π: {response.text}")
#         return False
    
#     roll_result = response.json()
#     print(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –∏–≥—Ä–æ–∫–∞ 1: {roll_result['results']}, –°—É–º–º–∞: {roll_result['total']}")
    
#     # –ë—Ä–æ—Å–æ–∫ –∫–æ—Å—Ç–µ–π –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
#     response = requests.post(f"{BASE_URL}/api/dice/{room_id}/roll?telegram_id={telegram_id2}", json=dice_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –±—Ä–æ—Å–∫–∞ –∫–æ—Å—Ç–µ–π –∏–≥—Ä–æ–∫–∞ 2: {response.text}")
#         return False
    
#     roll_result2 = response.json()
#     print(f"üé≤ –†–µ–∑—É–ª—å—Ç–∞—Ç –±—Ä–æ—Å–∫–∞ –∏–≥—Ä–æ–∫–∞ 2: {roll_result2['results']}, –°—É–º–º–∞: {roll_result2['total']}")
    
#     return True

# def test_rps_game(telegram_id1, telegram_id2):
#     """–¢–µ—Å—Ç –∏–≥—Ä—ã –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞"""
#     print("‚úÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä—ã –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞...")
    
#     # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã
#     response = requests.post(f"{BASE_URL}/api/games/create-room?game_type=rps&bet_amount=5&max_players=2&telegram_id={telegram_id1}")
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã RPS: {response.text}")
#         return False
    
#     room = response.json()
#     room_id = room["room_id"]
#     print(f"‚úÖ RPS –∫–æ–º–Ω–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∞: {room_id}")
    
#     # –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∏–≥—Ä–æ–∫–∞
#     response = requests.post(f"{BASE_URL}/api/games/join-room/{room_id}?telegram_id={telegram_id2}")
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ RPS –∫–æ–º–Ω–∞—Ç–µ: {response.text}")
#         return False
    
#     print("‚úÖ –í—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è")
    
#     # –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
#     response = requests.post(f"{BASE_URL}/api/games/start-game/{room_id}?telegram_id={telegram_id1}")
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ RPS –∏–≥—Ä—ã: {response.text}")
#         return False
    
#     print("‚úÖ RPS –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞")
    
#     # –•–æ–¥—ã –∏–≥—Ä–æ–∫–æ–≤
#     choice1_data = {"choice": "rock"}
#     response = requests.post(f"{BASE_URL}/api/rps/{room_id}/play?telegram_id={telegram_id1}", json=choice1_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ 1: {response.text}")
#         return False
    
#     choice2_data = {"choice": "scissors"}
#     response = requests.post(f"{BASE_URL}/api/rps/{room_id}/play?telegram_id={telegram_id2}", json=choice2_data)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Ö–æ–¥–∞ –∏–≥—Ä–æ–∫–∞ 2: {response.text}")
#         return False
    
#     result = response.json()
#     print(f"‚úÇÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç RPS: {result['message']}")
    
#     return True

# def test_user_stats(telegram_id):
#     """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
#     print(f"üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id}...")
    
#     response = requests.get(f"{BASE_URL}/api/users/{telegram_id}")
#     if response.status_code == 200:
#         user = response.json()
#         print(f"‚úÖ –ë–∞–ª–∞–Ω—Å: {user['stars_balance']} –∑–≤–µ–∑–¥")
#         print(f"   –ò–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user['total_games']}")
#         print(f"   –ò–≥—Ä –≤—ã–∏–≥—Ä–∞–Ω–æ: {user['wins']}")
#         return True
#     else:
#         print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {response.text}")
#         return False

# def main():
#     """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
#     print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∏–≥—Ä —Å –ë–î")
#     print("=" * 50)
    
#     # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
#     user1 = test_user_creation()
#     if not user1:
#         return
    
#     # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–≥—Ä
#     user_data2 = {
#         "telegram_id": 987654321,
#         "username": "test_player2",
#         "first_name": "Test2",
#         "last_name": "Player2"
#     }
    
#     response = requests.post(f"{BASE_URL}/api/users", json=user_data2)
#     if response.status_code != 200:
#         print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {response.text}")
#         return
    
#     user2 = response.json()
#     print(f"‚úÖ –í—Ç–æ—Ä–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω: {user_data2['username']} (ID: {user2['user_id']})")
    
#     # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–≤–µ–∑–¥ –æ–±–æ–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
#     if not test_add_stars(user1["telegram_id"]):
#         return
#     if not test_add_stars(user_data2["telegram_id"]):
#         return
    
#     # –¢–µ—Å—Ç –∏–≥—Ä—ã –≤ –∫–æ—Å—Ç–∏
#     if not test_dice_game(user1["telegram_id"], user_data2["telegram_id"]):
#         return
    
#     # –¢–µ—Å—Ç RPS –∏–≥—Ä—ã
#     test_rps_game(user1["telegram_id"], user_data2["telegram_id"])
    
#     # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
#     test_user_stats(user1["telegram_id"])
#     test_user_stats(user_data2["telegram_id"])
    
#     print("=" * 50)
#     print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

# if __name__ == "__main__":
#     main()
